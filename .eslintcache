[{"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\index.js":"1","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\serviceWorker.js":"2","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\App.js":"3","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\store.js":"4","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\config\\auth.js":"5","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\config\\history.js":"6","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\context\\LoginContext.js":"7","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\components\\Navbar\\Navbar.js":"8","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\selectFiltroLocalizacao.js":"9","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\selectEmpresa.js":"10","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\selectEstabelecimentoASerEditado.js":"11","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\user.js":"12","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\registrar.js":"13","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\logar.js":"14","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\putEstabelecimento.js":"15","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\cadastrarEmpresa.js":"16","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\registrarAdmin.js":"17","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\empresaByLoggedUser.js":"18","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\estabelecimentosByLocalizacaoAndEmpresa.js":"19","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\postEstabelecimento.js":"20","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\auth\\Login.jsx":"21","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\Portal.jsx":"22","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\auth\\Cadastrar.jsx":"23","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\index.jsx":"24","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\components\\Navbar\\NavbarAdmin.js":"25","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\components\\Navbar\\NavbarUser.js":"26","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\createAsyncSlice.js":"27","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\config\\config.js":"28","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\EstabelecimentosPorEmpresa.js":"29","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\services\\requests\\empresa.js":"30","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\services\\requests\\auth.js":"31","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\services\\requests\\estabelecimentos.js":"32","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\css\\admin\\Login.js":"33","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\ListarEmpresas.jsx":"34","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\BuscaPorLocalizacao.jsx":"35","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\BuscaPorLocalizacaoAndEmpresa.jsx":"36","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\TabelaEstalecimentos.jsx":"37","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\estabelecimentosByEmpresa.js":"38","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\CadastrarEstabelecimentos.jsx":"39","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\CadastrarAdmins.jsx":"40","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\CadastrarEmpresa.jsx":"41","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\getEmpresasWithEstabelecimento.js":"42","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\localizacoesByEmpresa.js":"43","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\localizacoes.js":"44","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\estabelecimentosByLoggedUser.js":"45","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\estabelecimentosByLocalizacao.js":"46","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\deleteEstabelecimento.js":"47","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\components\\AlertDialog.jsx":"48","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\getOneEstabelecimentoByLoggedUser.js":"49","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\css\\admin\\CadastrarEstabelecimentos.js":"50","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\services\\requests\\localizacao.js":"51"},{"size":892,"mtime":1611485298000,"results":"52","hashOfConfig":"53"},{"size":5004,"mtime":1611485298000,"results":"54","hashOfConfig":"53"},{"size":983,"mtime":1613946239365,"results":"55","hashOfConfig":"53"},{"size":1387,"mtime":1613917347541,"results":"56","hashOfConfig":"53"},{"size":670,"mtime":1611485298000,"results":"57","hashOfConfig":"53"},{"size":110,"mtime":1611485298000,"results":"58","hashOfConfig":"53"},{"size":98,"mtime":1611485298000,"results":"59","hashOfConfig":"53"},{"size":2238,"mtime":1611485298000,"results":"60","hashOfConfig":"53"},{"size":384,"mtime":1611485298000,"results":"61","hashOfConfig":"53"},{"size":470,"mtime":1611485298000,"results":"62","hashOfConfig":"53"},{"size":450,"mtime":1611485298000,"results":"63","hashOfConfig":"53"},{"size":609,"mtime":1611485298000,"results":"64","hashOfConfig":"53"},{"size":516,"mtime":1613910038003,"results":"65","hashOfConfig":"53"},{"size":474,"mtime":1613909837229,"results":"66","hashOfConfig":"53"},{"size":620,"mtime":1613920608456,"results":"67","hashOfConfig":"53"},{"size":588,"mtime":1613917774215,"results":"68","hashOfConfig":"53"},{"size":565,"mtime":1613921476745,"results":"69","hashOfConfig":"53"},{"size":370,"mtime":1611485298000,"results":"70","hashOfConfig":"53"},{"size":532,"mtime":1611485298000,"results":"71","hashOfConfig":"53"},{"size":631,"mtime":1613920406090,"results":"72","hashOfConfig":"53"},{"size":4149,"mtime":1613910098434,"results":"73","hashOfConfig":"53"},{"size":1919,"mtime":1613939921824,"results":"74","hashOfConfig":"53"},{"size":4524,"mtime":1613910074257,"results":"75","hashOfConfig":"53"},{"size":2600,"mtime":1613950787604,"results":"76","hashOfConfig":"53"},{"size":1745,"mtime":1613950799742,"results":"77","hashOfConfig":"53"},{"size":1025,"mtime":1613920343850,"results":"78","hashOfConfig":"53"},{"size":1318,"mtime":1611485298000,"results":"79","hashOfConfig":"53"},{"size":233,"mtime":1611485298000,"results":"80","hashOfConfig":"53"},{"size":3741,"mtime":1613939943667,"results":"81","hashOfConfig":"53"},{"size":417,"mtime":1613939337688,"results":"82","hashOfConfig":"53"},{"size":274,"mtime":1611485298000,"results":"83","hashOfConfig":"53"},{"size":1439,"mtime":1611485298000,"results":"84","hashOfConfig":"53"},{"size":761,"mtime":1611485298000,"results":"85","hashOfConfig":"53"},{"size":2752,"mtime":1613946231349,"results":"86","hashOfConfig":"53"},{"size":2772,"mtime":1613946226403,"results":"87","hashOfConfig":"53"},{"size":3279,"mtime":1613940120679,"results":"88","hashOfConfig":"53"},{"size":8506,"mtime":1613950762303,"results":"89","hashOfConfig":"53"},{"size":421,"mtime":1611485298000,"results":"90","hashOfConfig":"53"},{"size":9208,"mtime":1613962643316,"results":"91","hashOfConfig":"53"},{"size":3903,"mtime":1613921608507,"results":"92","hashOfConfig":"53"},{"size":4032,"mtime":1613919385605,"results":"93","hashOfConfig":"53"},{"size":447,"mtime":1613939325108,"results":"94","hashOfConfig":"53"},{"size":393,"mtime":1611485298000,"results":"95","hashOfConfig":"53"},{"size":325,"mtime":1611485298000,"results":"96","hashOfConfig":"53"},{"size":439,"mtime":1611485298000,"results":"97","hashOfConfig":"53"},{"size":462,"mtime":1611485298000,"results":"98","hashOfConfig":"53"},{"size":400,"mtime":1611485298000,"results":"99","hashOfConfig":"53"},{"size":1277,"mtime":1611485298000,"results":"100","hashOfConfig":"53"},{"size":474,"mtime":1611485298000,"results":"101","hashOfConfig":"53"},{"size":1324,"mtime":1613916284404,"results":"102","hashOfConfig":"53"},{"size":121,"mtime":1611485298000,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"14648uq",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\index.js",[],["222","223"],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\serviceWorker.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\App.js",["224","225","226","227","228"],"import {\n  Switch,\n  BrowserRouter, Route, Router, Redirect\n} from \"react-router-dom\";\nimport history from \"./app/config/history\";\nimport Navbar from './app/components/Navbar/Navbar';\nimport Admin from './app/views/admin';\nimport { useState } from \"react\";\nimport { isAuthenticated, getUser } from './app/config/auth';\nimport LoginContext from './app/context/LoginContext';\nimport Portal from './app/views/portal/Portal';\nimport Login from './app/views/auth/Login';\nimport Cadastrar from \"./app/views/auth/Cadastrar\";\nfunction App() {\n\n  return (\n    <BrowserRouter >\n      <Navbar></Navbar>\n      <main>\n        <Router history={history}>\n          <Switch>\n            <Route component={Login} path=\"/login\" />\n            <Route component={Cadastrar} path=\"/cadastrar\" />\n            <Route component={Portal} path=\"/portal\" />\n            <Route component={Admin} path=\"/\" />\n\n\n          </Switch>\n        </Router>\n      </main>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\store.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\config\\auth.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\config\\history.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\context\\LoginContext.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\components\\Navbar\\Navbar.js",["229","230","231","232","233"],"import React, { useContext, Fragment, useState, useEffect } from 'react'\nimport { Navbar as NavbarBootstrap, NavDropdown, Nav } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeToken, getUser } from '../../config/auth';\nimport history from '../../config/history';\nimport LoginContext from '../../context/LoginContext';\nimport { loginStore, logoutStore } from '../../store/slicers/user';\nimport NavbarAdmin from './NavbarAdmin';\nimport NavbarUser from './NavbarUser';\nconst Navbar = (props) => {\n\n    const user = useSelector((state) => state.auth.user)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        const usuario = getUser()\n        if (usuario) {\n            dispatch(loginStore(usuario))\n        }\n        return () => { };\n    }, [])\n\n    return (\n        <>\n\n            <header>\n                <NavbarBootstrap bg=\"primary\" variant='dark' expand=\"lg\">\n                    <div className='container'>\n                        <NavbarBootstrap.Brand>Gerenciador de Estabelecimentos</NavbarBootstrap.Brand>\n                        <NavbarBootstrap.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <NavbarBootstrap.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"ml-auto\">\n                                {user.role === 'admin' || user.role === 'superAdmin'\n                                    ? <NavbarAdmin logout={logout} /> : user.userId ?\n                                        <NavbarUser logout={logout} /> : <Fragment>\n                                            <Nav.Link onClick={goToLoginPage}>Login</Nav.Link>\n                                            <Nav.Link onClick={goToRegisterPage}>Cadastre-se</Nav.Link>\n                                        </Fragment>}\n                            </Nav>\n                        </NavbarBootstrap.Collapse>\n                    </div>\n                </NavbarBootstrap>\n            </header>\n\n        </>\n    )\n    function logout() {\n        removeToken()\n        dispatch(logoutStore())\n        history.push('/')\n    }\n}\n\nfunction goToLoginPage() {\n    history.push('/login')\n}\n\nfunction goToRegisterPage() {\n    history.push('/cadastrar')\n}\n\nexport default Navbar\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\selectFiltroLocalizacao.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\selectEmpresa.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\selectEstabelecimentoASerEditado.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\user.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\registrar.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\logar.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\putEstabelecimento.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\cadastrarEmpresa.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\registrarAdmin.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\empresaByLoggedUser.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\estabelecimentosByLocalizacaoAndEmpresa.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\postEstabelecimento.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\auth\\Login.jsx",["234","235"],"import { useContext, useEffect, useState } from 'react';\nimport history from '../../config/history';\nimport Alert from '@material-ui/lab/Alert';\nimport { CircularProgress } from '@material-ui/core';\nimport StyledDiv from '../css/admin/Login';\nimport { fetchLogar, resetLogarSlice } from '../../store/slicers/async/logar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport http from '../../config/config';\nimport { saveLocalStorage, getToken } from '../../config/auth';\nimport { loginStore } from '../../store/slicers/user';\n\nconst Login = () => {\n\n    const [mostrarAlertError, setMostrarAlertError] = useState(false)\n    const [mensagensErro, setMensagensErro] = useState([])\n    const dispatch = useDispatch() \n    const loginState = useSelector((state) => state.auth.login)\n    const userState = useSelector((state) => state.auth.user)\n    const [form, setForm] = useState({\n        email: '',\n        senha: '',\n    })\n\n    useEffect(() => {\n        document.addEventListener('keypress', enviarFormPeloEnter)\n        return () => {\n            document.removeEventListener('keypress', enviarFormPeloEnter)\n            dispatch(resetLogarSlice())\n        };\n\n        function enviarFormPeloEnter(e) {\n            if (e.key === 'Enter') {\n                let botaoLogin = document.querySelector('#botaoLogin')\n                botaoLogin.click()\n            }\n        }\n\n    }, [])\n\n    function formHandler(event) {\n        setForm({\n            ...form,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    useEffect(() => {\n        if(loginState.error){\n            let erros = [];\n            loginState.error.map((error, index) => {\n                return erros.push(<li key={index} >{error.msg}</li>)\n            })\n            setMensagensErro(erros)\n            setMostrarAlertError(true)\n        }\n      return () => {};\n    }, [loginState])\n\n    useEffect(() => {\n        if(userState.userId){\n            if(userState.role === 'superAdmin'){\n                history.push('/cadastrarAdmins')\n            }else if(userState.role ==='admin'){\n                history.push('/')\n            }else{\n                history.push('/portal/home')\n            }\n        }\n      return () => {};\n    }, [userState])\n\n    const handleLogin = async () => {\n        try {\n            const response = await dispatch(fetchLogar(form))\n            const user = response.payload.user\n            saveLocalStorage({token: response.payload.token, user})\n            dispatch(loginStore(user))\n            http.defaults.headers['x-auth-token'] = getToken();\n            if(user.role === 'superAdmin'){\n                history.push('/cadastrarAdmins')\n            }else if(user.role ==='admin'){\n                history.push('/')\n            }else{\n                history.push('/portal/home')\n            }\n        } catch (error) {\n        }\n    }\n\n    return (\n        <>\n            <StyledDiv className='container'>\n                <form className={'login'}>\n                    <h2 className={['login__title', \"centered-title\"].join(\" \")}>Login</h2>\n                    {mostrarAlertError ? <Alert closeText=\"Fechar\" onClose={() => setMostrarAlertError(false)} className={`alertError`} severity=\"error\">\n                        <ul>\n                            {mensagensErro}\n                        </ul>\n                    </Alert> : ''}\n                    <label className={'login__label'} htmlFor='email'>Email</label>\n                    <input onChange={formHandler} value={form.email} className={'login__input'} id='email' name='email' type='email'></input>\n                    <label className={'login__label'} htmlFor='senha'>Senha</label>\n                    <input onChange={formHandler} value={form.senha} className={'login__input'} id='senha' name='senha' type='password'></input>\n                    {loginState.loading ? <CircularProgress size={40}></CircularProgress> : ''}\n                    <button id={'botaoLogin'} type='button' onClick={() => handleLogin()} className={'login__button'}>Entrar</button>\n                </form>\n            </StyledDiv>\n        </>\n    )\n}\n\nexport default Login\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\Portal.jsx",["236"],"import React, { Fragment } from 'react'\nimport { Redirect, Route } from 'react-router-dom';\nimport { getUser, isAuthenticated } from '../../config/auth';\nimport history from '../../config/history';\nimport ListarEmpresas from './ListarEmpresas';\nimport EstabelecimentosPorEmpresa from './EstabelecimentosPorEmpresa';\nimport BuscaPorLocalizacao from './BuscaPorLocalizacao';\nimport BuscaPorLocalizacaoAndEmpresa from './BuscaPorLocalizacaoAndEmpresa';\nimport TabelaEstabelecimentos from '../admin/TabelaEstalecimentos';\n\nconst Portal = (props) => {\n  const LoggedRoute = ({ ...rest }) => {\n    if (!isAuthenticated() && history.location.pathname !== '/login'\n      && history.location.pathname !== '/register') {\n      return <Redirect push to=\"/login\" />\n    }\n    return <Route {...rest}></Route>\n  }\n\n  return (\n\n\n    <Fragment>\n      <LoggedRoute exact basename={props.match.path}\n        path={props.match.path + '/home'} component={ListarEmpresas} />\n\n      <LoggedRoute exact basename={props.match.path}\n        path={props.match.path + '/empresa'} component={EstabelecimentosPorEmpresa} />\n      <LoggedRoute exact basename={props.match.path}\n        path={props.match.path + '/buscaPorLocalizacao'} component={() => <BuscaPorLocalizacao />} />\n\n      <LoggedRoute exact basename={props.match.path}\n        path={props.match.path + '/empresa/buscaPorLocalizacao'}\n        component={() => <BuscaPorLocalizacaoAndEmpresa />} />\n\n      <LoggedRoute exact basename={props.match.path} path={props.match.path + '/filtroLocalizacao'}\n        component={() => <TabelaEstabelecimentos filtroLocalizacao={true}></TabelaEstabelecimentos>} />\n\n      <LoggedRoute exact basename={props.match.path} path={props.match.path + '/empresa/filtroLocalizacao'}\n        component={() => <TabelaEstabelecimentos filtroLocalizacao={true} filtroEmpresa={true}></TabelaEstabelecimentos>} />\n    </Fragment>\n\n  )\n}\n\n\nexport default Portal\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\auth\\Cadastrar.jsx",["237","238","239"],"import { useContext, useEffect, useState } from 'react';\nimport history from '../../config/history';\nimport Alert from '@material-ui/lab/Alert';\nimport { CircularProgress } from '@material-ui/core';\nimport StyledDiv from '../css/admin/Login';\nimport { fetchLogar } from '../../store/slicers/async/logar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport http from '../../config/config';\nimport { saveLocalStorage, getToken } from '../../config/auth';\nimport { loginStore } from '../../store/slicers/user';\nimport { fetchRegistrar, resetRegistrarSlice } from '../../store/slicers/async/registrar';\n\nconst Cadastrar = () => {\n\n    const [mostrarAlertError, setMostrarAlertError] = useState(false)\n    const [mensagensErro, setMensagensErro] = useState([])\n    const dispatch = useDispatch() \n    const registrarState = useSelector((state) => state.auth.registrar)\n    const userState = useSelector((state) => state.auth.user)\n    const [form, setForm] = useState({\n        nome: '',\n        email: '',\n        senha: '',\n    })\n\n    useEffect(() => {\n        document.addEventListener('keypress', enviarFormPeloEnter)\n        return () => {\n            document.removeEventListener('keypress', enviarFormPeloEnter)\n            dispatch(resetRegistrarSlice())\n        };\n\n        function enviarFormPeloEnter(e) {\n            if (e.key === 'Enter') {\n                let botaoLogin = document.querySelector('#botaoLogin')\n                botaoLogin.click()\n            }\n        }\n\n    }, [])\n\n    useEffect(() => {\n        if(userState.userId){\n            if(userState.role === 'superAdmin'){\n                history.push('/cadastrarAdmins')\n            }else if(userState.role ==='admin'){\n                history.push('/')\n            }else{\n                history.push('/portal/home')\n            }\n        }\n      return () => {};\n    }, [userState])\n\n    function formHandler(event) {\n        setForm({\n            ...form,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    useEffect(() => {\n        if(registrarState.error){\n            let erros = [];\n            registrarState.error.map((error, index) => {\n                return erros.push(<li key={index} >{error.msg}</li>)\n            })\n            setMensagensErro(erros)\n            setMostrarAlertError(true)\n        }\n      return () => {};\n    }, [registrarState])\n\n    const handleCadastro = async () => {\n        try {\n            const response = await dispatch(fetchRegistrar(form))\n            const user = response.payload.user\n            saveLocalStorage({token: response.payload.token, user})\n            dispatch(loginStore(user))\n            http.defaults.headers['x-auth-token'] = getToken();\n            if(user.role === 'superAdmin'){\n                history.push('/cadastrarAdmins')\n            }else if(user.role ==='admin'){\n                history.push('/')\n            }else{\n                history.push('/portal/home')\n            }\n        } catch (error) {\n        }\n    }\n\n    return (\n        <>\n            <StyledDiv className='container'>\n                <form className={'login'}>\n                    <h2 className={['login__title', \"centered-title\"].join(\" \")}>Cadastre-se</h2>\n                    {mostrarAlertError ? <Alert closeText=\"Fechar\" onClose={() => setMostrarAlertError(false)} className={`alertError`} severity=\"error\">\n                        <ul>\n                            {mensagensErro}\n                        </ul>\n                    </Alert> : ''}\n\n                    <label className={'login__label'} htmlFor='nome'>Primeiro Nome</label>\n                    <input onChange={formHandler} value={form.nome} className={'login__input'} id='nome' name='nome' type='text'></input>\n\n                    <label className={'login__label'} htmlFor='email'>Email</label>\n                    <input onChange={formHandler} value={form.email} className={'login__input'} id='email' name='email' type='email'></input>\n                    <label className={'login__label'} htmlFor='senha'>Senha</label>\n                    <input onChange={formHandler} value={form.senha} className={'login__input'} id='senha' name='senha' type='password'></input>\n                    {registrarState.loading ? <CircularProgress size={40}></CircularProgress> : ''}\n                    <button id={'botaoLogin'} type='button' onClick={() => handleCadastro()} className={'login__button'}>Enviar</button>\n                </form>\n            </StyledDiv>\n        </>\n    )\n}\n\nexport default Cadastrar\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\index.jsx",["240","241","242","243","244","245","246"],"import {\n  Redirect,\n  Route\n} from \"react-router-dom\";\nimport history from '../../config/history';\nimport { isAuthenticated, getUser } from '../../config/auth';\nimport CadastrarEstabelecimentos from './CadastrarEstabelecimentos';\nimport Login from '../auth/Login';\nimport TabelaEstabelecimentos from './TabelaEstalecimentos';\nimport BuscaPorLocalizacao from '../portal/BuscaPorLocalizacao';\nimport user from \"../../store/slicers/user\";\nimport { useSelector } from \"react-redux\";\nimport Cadastrar from \"../auth/Cadastrar\";\nimport CadastrarAdmins from './CadastrarAdmins';\nimport CadastrarEmpresa from './CadastrarEmpresa';\nconst Admin = (props) => {\n\n  const userState = useSelector((state) => state.auth.user)\n\n  const AdminRoute = ({ ...rest }) => {\n    const user = getUser()\n      if(user.role !== 'admin'  && user.role !== 'superAdmin'){\n        return <Redirect push to=\"/portal/home\" />\n      }\n    \n    return <Route {...rest}></Route>\n  }\n\n  return (\n    <>\n    \n      <AdminRoute exact basename={props.match.path}\n        path={props.match.path + '/'} component={() => <TabelaEstabelecimentos admin={true}/>}/>\n\n      <AdminRoute exact basename={props.match.path} path={props.match.path\n        + '/listaEstabelecimentos'} component={TabelaEstabelecimentos} />\n        <AdminRoute exact basename={props.match.path} path={'/listaEstabelecimentos/navbar'} \n        component={() => <TabelaEstabelecimentos navbar={true}></TabelaEstabelecimentos>} />\n\n      <AdminRoute exact basename={props.match.path} path={'/cadastrarEmpresas'} component={CadastrarEmpresa} />\n\n      <AdminRoute exact basename={props.match.path}\n        path={'/cadastrarAdmins'} component={CadastrarAdmins}/>\n\n      <AdminRoute exact basename={props.match.path} path={'/cadastrarEstabelecimentos'}\n        component={() => <CadastrarEstabelecimentos novoCadastro={true} />} />\n        <AdminRoute exact basename={props.match.path} path={'/cadastrarEstabelecimentos/navbar'}\n        component={() => <CadastrarEstabelecimentos navbar={true} novoCadastro={true} />} />\n      <AdminRoute exact basename={props.match.path} path={'/editarEstabelecimentos'}\n        component={() => <CadastrarEstabelecimentos novoCadastro={false} />} />\n\n      {/* <AdminRoute exact basename={props.match.path} path={'/buscaPorLocalizacao'}\n        component={() => <BuscaPorLocalizacao admin={true}></BuscaPorLocalizacao>} /> \n\n      <AdminRoute exact basename={props.match.path} path={'/filtroLocalizacao'}\n        component={() => <TabelaEstabelecimentos admin={true} filtroLocalizacao={true} />} /> */}\n    </>\n  )\n}\n\nexport default Admin\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\components\\Navbar\\NavbarAdmin.js",["247","248","249"],"import React, { Fragment, useContext } from 'react'\nimport { Nav, NavDropdown } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux';\nimport history from '../../config/history';\n\nconst NavbarAdmin = (props) => {\n\n    const user = useSelector((state) => state.auth.user)\n\n    return (\n        <Fragment>\n            <Nav.Link onClick={goToHome}>{user.role === 'superAdmin' ? 'Cadastrar Admins' : 'Home'}</Nav.Link>\n            <NavDropdown title={user.name} id=\"basic-nav-dropdown\">\n            <NavDropdown.Item onClick={goToCadastrarEmpresas}>\n                    Cadastrar Empresa</NavDropdown.Item>\n            <NavDropdown.Divider />\n            {user.role === 'superAdmin' ? <NavDropdown.Item onClick={()=>history.push('/listaEstabelecimentos/navbar')}>\n                    Lista de Estabelecimentos</NavDropdown.Item> : ''}\n                <NavDropdown.Item onClick={goToCadastrarEstabelecimentos}>\n                    Cadastrar Estabelecimento</NavDropdown.Item>\n                {/* <NavDropdown.Item onClick={goToBuscaPorLocalizacao}>Busca por Localização</NavDropdown.Item>  */}\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={props.logout}>Sair</NavDropdown.Item>\n            </NavDropdown>\n        </Fragment>)\n\n    function goToHome() {\n        if(user.role === 'superAdmin'){\n            history.push('/cadastrarAdmins')\n        }else{\n            history.push('/')\n        }\n    }\n}\n\nfunction goToCadastrarEstabelecimentos() {\n    history.push('/cadastrarEstabelecimentos/navbar')\n}\n\nfunction goToCadastrarEmpresas() {\n    history.push('/cadastrarEmpresas')\n}\n\nfunction goToBuscaPorLocalizacao() {\n    history.push('/buscaPorLocalizacao')\n}\n\nexport default NavbarAdmin\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\components\\Navbar\\NavbarUser.js",["250","251","252","253"],"import React, { Fragment, useContext } from 'react'\nimport { Nav, NavDropdown } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutStore } from '../../store/slicers/user';\nimport { removeToken } from '../../config/auth';\nimport history from '../../config/history';\n\nconst NavbarUser = (props) => {\n\n    const user = useSelector((state) => state.auth.user)\n\n    return (\n        <Fragment>\n            <Nav.Link onClick={goToHome}>Home</Nav.Link>\n            <NavDropdown title={user.name} id=\"basic-nav-dropdown\">\n                <NavDropdown.Item onClick={goToBuscaPorLocalizacao}>Busca por Localização</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={props.logout}>Sair</NavDropdown.Item>\n            </NavDropdown>\n        </Fragment>)\n\n    function goToHome() {\n        history.push('/portal/home')\n    }\n\n}\n\nfunction goToBuscaPorLocalizacao() {\n    history.push('/portal/buscaPorLocalizacao')\n}\n\nexport default NavbarUser\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\createAsyncSlice.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\config\\config.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\EstabelecimentosPorEmpresa.js",["254","255","256"],"import React, {useEffect, useState, Fragment} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEstabelecimentosByEmpresa } from '../../store/slicers/async/estabelecimentosByEmpresa';\nimport { Container as BootstrapContainer, Table } from 'react-bootstrap'\nimport styled from 'styled-components';\nimport history from '../../config/history';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Button, Tooltip } from '@material-ui/core';\nimport {useAlert} from 'react-alert'\n\nconst EstabelecimentosPorEmpresa = () => {\n    const selectEmpresaState = useSelector((state) => state.empresa.selectEmpresa)\n    const dispatch = useDispatch()\n    const [estabelecimentos, setEstabelecimentos] = useState([])\n    const [isListaVazia, setIsListaVazia] = useState(false)\n    const alert = useAlert()\n    useEffect(() => {\n        (async()=>{\n            const response = await dispatch(fetchEstabelecimentosByEmpresa(selectEmpresaState.empresaId))\n            if(response.type !== 'estabelecimentosByEmpresa [GET]/fetchError'){\n                setEstabelecimentos(response.payload)\n            }else{\n                setIsListaVazia(true)\n                alert.show(<div style={{ fontSize: '1.8rem' }}>Não existem Estabelecimentos cadastrados para esta empresa!</div>, {\n                    title: \"Erro!\",\n            \n                    onClose: () => history.push('/'),\n                    timeout: '4000'\n            \n                  });\n                  setTimeout(() => {\n                    history.push('/')\n                  }, 4000);\n            }\n        })()\n      return () => {};\n    }, [])\n\n    function mountEstabelecimentos() {\n        if (estabelecimentos && estabelecimentos.length > 0) {\n            return estabelecimentos.map((estabelecimento) => {\n                return (\n                    <Fragment>\n                        <tr key={estabelecimento._id}>\n                            <td className='item' \n                                className='item'>\n                                {estabelecimento.nome}\n                            </td>\n                            <td>\n                                {estabelecimento.endereco}\n                            </td>\n                            <td>\n                                {estabelecimento.localizacao.nome}\n                            </td>\n                        </tr>\n                    </Fragment>\n                )\n            })\n        }\n    }\n\n  return (\n    <>\n      <Container>\n                <h1>{`Estabelecimentos de ${selectEmpresaState.nomeEmpresa}`}</h1>\n                <Tooltip className='pesquisa' title={`Buscar estabelecimentos de ${selectEmpresaState.nomeEmpresa} por cidade`}>\n                                    <Button onClick={() =>\n                                       history.push('/portal/empresa/buscaPorLocalizacao')} size=\"small\">\n                                        <SearchIcon/>\n                                    </Button>\n                                </Tooltip>\n                <Table responsive striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Nome do Estabelecimento</th>\n                            <th>Endereço</th>\n                            <th>Localização</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {mountEstabelecimentos()}\n                    </tbody>\n                </Table>\n            </Container>\n    </>\n  )\n}\n\nexport default EstabelecimentosPorEmpresa\n\nconst Container = styled(BootstrapContainer)`\npadding: 1.5rem;\n    h1{\n        margin-bottom: 2rem;\n    }\n    .pesquisa{\n        margin-bottom: 1rem;\n    }\n`","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\services\\requests\\empresa.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\services\\requests\\auth.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\services\\requests\\estabelecimentos.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\css\\admin\\Login.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\ListarEmpresas.jsx",["257","258"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Container as BootstrapContainer, Table } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { fetchGetEmpresasWithEstabelecimento } from '../../store/slicers/async/getEmpresasWithEstabelecimento';\nimport history from '../../config/history';\nimport { selecionarEmpresa } from '../../store/slicers/selectEmpresa';\nimport { useAlert } from 'react-alert'\n\nconst ListarEmpresas = () => {\n    const alert = useAlert()\n    const [empresas, setEmpresas] = useState([])\n    const dispatch = useDispatch()\n    useEffect(() => {\n        (async () => {\n            const response = await dispatch(fetchGetEmpresasWithEstabelecimento())\n            if (response.payload[0]._id) {\n                setEmpresas(response.payload)\n            } else {\n                alert.show(<div style={{ fontSize: '1.8rem' }}>Não existem empresas cadastradas com estabelecimentos associados!</div>, {\n                    title: \"Erro!\",\n                });\n            }\n        })()\n        return () => { };\n    }, [])\n\n    function navigateToEstabelecimentosDaEmpresa(empresaId, nomeEmpresa) {\n        dispatch(selecionarEmpresa({ empresaId, nomeEmpresa }))\n        history.push('/portal/empresa')\n    }\n\n    function mountEmpresas() {\n\n\n        if (empresas && empresas.length > 0) {\n            return empresas.map((empresa) => {\n                return (\n                    <Fragment>\n                        <tr key={empresa._id}>\n                            <td className='item' onClick={() => navigateToEstabelecimentosDaEmpresa(empresa._id, empresa.nome)}\n                                className='item'>\n                                {empresa.nome}\n                            </td>\n                            <td>\n                                {empresa.tipo}\n                            </td>\n                        </tr>\n                    </Fragment>\n                )\n            })\n        }\n    }\n\n    return (\n        <>\n            <Container>\n                <h1>{'Empresas'}</h1>\n\n                <Table responsive striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Nome</th>\n                            <th>Tipo</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {mountEmpresas()}\n                    </tbody>\n                </Table>\n            </Container>\n        </>\n    )\n}\n\nexport default ListarEmpresas\n\nconst Container = styled(BootstrapContainer)`\npadding: 1.5rem;\n    h1{\n        margin-bottom: 2rem;\n    }\n    .item:hover{\n        cursor: pointer;\n        color: #0000EE;\n    }\n`","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\BuscaPorLocalizacao.jsx",["259","260"],"import { InputLabel, Select } from '@material-ui/core'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { Container as BootstrapContainer } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { selecionarLocalizacao } from '../../store/slicers/selectFiltroLocalizacao'\nimport history from '../../config/history';\nimport { useAlert } from 'react-alert'\nimport { fetchLocalizacoes } from '../../store/slicers/async/localizacoes';\n\nconst BuscaPorLocalizacao = (props) => {\n    const [localizacao, setLocalizacao] = useState('')\n    const dispatch = useDispatch()\n    const [localizacoes, setLocalizacoes] = useState([])\n    const alert = useAlert()\n    function handleSelectChange(event) {\n        setLocalizacao(event.target.value)\n        dispatch(selecionarLocalizacao(event.target.value))\n        if(props.admin){\n            history.push('/filtroLocalizacao')\n        }else{\n            history.push('/portal/filtroLocalizacao')\n        }\n    }\n\n    const [mappable, setMappable] = useState(false)\n    useEffect(() => {\n        (async () => {\n            const response = await dispatch(fetchLocalizacoes())\n            if (response.payload[0]._id) {\n                setLocalizacoes(response.payload)\n                setMappable(true)\n            } else {\n                alert.show(<div style={{ fontSize: '1.8rem' }}>Não existem Localizações com estabelecimentos vinculados cadastrados!</div>, {\n                    title: \"Erro!\",\n                });\n            }\n        })()\n        return () => { };\n    }, [])\n\n    return (\n        <>\n            <Container>\n                <h1>Busca por Localização</h1>\n                <InputLabel htmlFor=\"localizacao\">Localização</InputLabel>\n                <Select className='select' fullWidth={true}\n                    native\n                    value={localizacao}\n                    onChange={(event) => handleSelectChange(event)}\n                    inputProps={{\n                        name: 'Localização',\n                        id: 'localizacao',\n                    }}\n                >\n                    <option aria-label=\"None\" value=\"\" />\n                    {mappable ? localizacoes.map((loc) => {\n                        return (\n                            <Fragment>\n                                <option value={loc._id}>{loc.nome}</option>\n                            </Fragment>\n                        )\n\n                    }) : ''}\n\n                </Select>\n            </Container>\n        </>\n    )\n}\n\nexport default BuscaPorLocalizacao\n\nconst Container = styled(BootstrapContainer)`\npadding: 1.5rem;\n    h1{\n        margin-bottom: 2rem;\n    }\n    .select{\n        max-width: 500px;\n    }\n`","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\portal\\BuscaPorLocalizacaoAndEmpresa.jsx",["261","262"],"import {\n    fetchEstabelecimentosByLocalizacaoAndEmpresa\n} from '../../store/slicers/async/estabelecimentosByLocalizacaoAndEmpresa';\nimport { CircularProgress, InputLabel, Select } from '@material-ui/core'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { Container as BootstrapContainer } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { selecionarLocalizacao } from '../../store/slicers/selectFiltroLocalizacao'\nimport history from '../../config/history';\nimport { useAlert } from 'react-alert'\nimport { fetchLocalizacoesByEmpresa } from '../../store/slicers/async/localizacoesByEmpresa';\nconst BuscaPorLocalizacaoAndEmpresa = (props) => {\n    const [localizacao, setLocalizacao] = useState('')\n    const dispatch = useDispatch()\n    const [localizacoes, setLocalizacoes] = useState([])\n    const alert = useAlert()\n    function handleSelectChange(event) {\n        setLocalizacao(event.target.value)\n        dispatch(selecionarLocalizacao(event.target.value))\n        history.push('/portal/empresa/filtroLocalizacao')\n    }\n    const selectEmpresaState = useSelector((state) => state.empresa.selectEmpresa)\n    const [mappable, setMappable] = useState(false)\n\n    useEffect(() => {\n        (async () => {\n            const response = await dispatch(fetchLocalizacoesByEmpresa(selectEmpresaState.empresaId))\n            if(response.payload.localizacoes.length > 0){\n                setLocalizacoes(response.payload.localizacoes)\n                setMappable(true)\n            }else{\n                alert.show(<div style={{ fontSize: '1.8rem' }}>Não existem Localizações com estabelecimentos vinculados cadastrados para esta empresa!</div>, {\n                    title: \"Erro!\",\n                  });\n            \n                } \n            \n        })()\n        return () => { };\n    }, [])\n\n    return (\n        <>\n            <Container>\n                <h1>{`Busca por Localização - ${selectEmpresaState.nomeEmpresa}`}</h1>\n                {mappable ?\n                    <Fragment>\n                    <InputLabel htmlFor=\"localizacao\">Localização</InputLabel>\n                <Select className='select' fullWidth={true}\n                    native\n                    value={localizacao}\n                    onChange={(event) => handleSelectChange(event)}\n                    inputProps={{\n                        name: 'Localização',\n                        id: 'localizacao',\n                    }}\n                >\n                    <option aria-label=\"None\" value=\"\" />\n                    {localizacoes.map((loc) => {\n                            return (\n                                <Fragment>\n                                    <option value={loc._id}>{loc.nome}</option>\n                                </Fragment>\n                            )\n                        \n                    })}\n\n                </Select>\n                    </Fragment> : <CircularProgress size={65}></CircularProgress>}\n            </Container>\n        </>\n    )\n}\n\nexport default BuscaPorLocalizacaoAndEmpresa\n\nconst Container = styled(BootstrapContainer)`\npadding: 1.5rem;\n    h1{\n        margin-bottom: 2rem;\n    }\n    .select{\n        max-width: 500px;\n    }\n`","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\TabelaEstalecimentos.jsx",["263","264","265"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Container as BootstrapContainer, Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { fetchEstabelecimentosByLoggedUser } from '../../store/slicers/async/estabelecimentosByLoggedUser'\nimport history from '../../config/history';\nimport { Button, Tooltip, CircularProgress } from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\nimport { selecionarEstabelecimentoASerEditado } from '../../store/slicers/selectEstabelecimentoASerEditado'\nimport AlertDialog from '../../components/AlertDialog';\nimport { fetchDeleteEstabelecimento } from '../../store/slicers/async/deleteEstabelecimento';\nimport {\n    fetchEstabelecimentosByLocalizacao\n} from '../../store/slicers/async/estabelecimentosByLocalizacao';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useAlert } from 'react-alert'\nimport {\n    fetchEstabelecimentosByLocalizacaoAndEmpresa\n} from '../../store/slicers/async/estabelecimentosByLocalizacaoAndEmpresa';\nconst TabelaEstabelecimentos = (props) => {\n\n    const dispatch = useDispatch()\n    const [estabelecimentos, setEstabelecimentos] = useState([])\n    const [alertDialogIsOpen, setAlertDialogIsOpen] = useState(false)\n    const [nomeEstabelecimento, setNomeEstabelecimento] = useState('')\n    const [estabelecimentoId, setEstabelecimentoId] = useState('')\n    const [responseDelete, setResponseDelete] = useState('')\n    const [loading, setLoading] = useState(true)\n    const localizacaoIdFiltro = useSelector((state) =>\n        state.estabelecimentos.selectFiltroLocalizacao)\n    const alert = useAlert()\n    const selectEmpresaState = useSelector((state) => state.empresa.selectEmpresa)\n    const [title, setTitle] = useState('Estabelecimentos')\n\n    useEffect(() => {\n        (async () => {\n            if (props.filtroLocalizacao) {\n                if (props.filtroEmpresa) {\n                    const response = await dispatch(fetchEstabelecimentosByLocalizacaoAndEmpresa\n                        ({ localizacaoId: localizacaoIdFiltro, empresaId: selectEmpresaState.empresaId }))\n                    if (response.payload.length > 0) {\n                        setEstabelecimentos(response.payload)\n                        setLoading(false)\n                    }\n\n                } else {\n                    const response = await dispatch\n                        (fetchEstabelecimentosByLocalizacao(localizacaoIdFiltro))\n                    if (response.type !== 'estabelecimentosByLocalizacaoAndLoggedUser [GET]/fetchError') {\n                        setEstabelecimentos(response.payload)\n                        setLoading(false)\n                    } \n                }\n            } else {\n                const response = await dispatch(fetchEstabelecimentosByLoggedUser())\n                if (response.type === 'estabelecimentosByLoggedUser [GET]/fetchError') {\n                    if(props.navbar){\n                        alert.show(<div style={{ fontSize: '1.8rem' }}>Não existem estabelecimentos cadastrados!</div>, {\n                            title: \"Erro!\",\n                    \n                            onClose: () => history.push('/cadastrarEstabelecimentos'),\n                            timeout: '4000'\n                    \n                          });\n                    \n                          setTimeout(() => {\n                            history.push('/cadastrarEstabelecimentos')\n                          }, 4000);\n                    }else{\n                        history.push('/cadastrarEstabelecimentos')\n                    }\n                } else {\n                    setEstabelecimentos(response.payload)\n                    setLoading(false)\n                }\n            }\n\n        })()\n        return () => { };\n    }, [responseDelete])\n\n    useEffect(() => {\n        if(props.filtroEmpresa && estabelecimentos.length > 0){\n            setTitle(`Estabelecimentos - ${selectEmpresaState.nomeEmpresa} - ${estabelecimentos[0].localizacao.nome}`)\n        }\n        else if(props.filtroLocalizacao && estabelecimentos.length > 0){\n            setTitle(`Estabelecimentos - ${estabelecimentos[0].localizacao.nome}`)\n        }else{\n            setTitle(`Estabelecimentos`)\n        }\n      return () => {};\n    }, [estabelecimentos])\n\n    function handleEditIconClick(id) {\n        dispatch(selecionarEstabelecimentoASerEditado(id))\n        history.push('/editarEstabelecimentos')\n    }\n\n    function handleDeleteIconClick(nome, id) {\n        setNomeEstabelecimento(nome)\n        setEstabelecimentoId(id)\n        setAlertDialogIsOpen(true)\n    }\n\n    async function deletarEstabelecimento() {\n        setAlertDialogIsOpen(false)\n        const response = await dispatch(fetchDeleteEstabelecimento(estabelecimentoId))\n        if (response.payload) {\n            setResponseDelete(response.payload)\n        }\n    }\n\n    function mountEstabelecimentos() {\n        if (estabelecimentos && estabelecimentos.length > 0) {\n            return estabelecimentos.map((estabelecimento) => {\n                return (\n                    <Fragment>\n                        <tr key={estabelecimento._id}>\n                            <td className='item'\n                                className='item'>\n                                {estabelecimento.nome}\n                            </td>\n                            <td>\n                                {estabelecimento.endereco}\n                            </td>\n                            <td>\n                                {estabelecimento.localizacao.nome}\n                            </td>\n                            <td>\n                                {estabelecimento.empresa.nome}\n                            </td>\n                            {!props.filtroLocalizacao || props.admin ? \n                                <td className='last-column'>\n                                    <Tooltip title=\"Editar Estabelecimento\">\n                                        <Button className={'editIconButton'} onClick={() =>\n                                            handleEditIconClick(\n                                                estabelecimento._id)} size=\"small\">\n                                            <EditIcon className='editIcon'></EditIcon>\n                                        </Button>\n                                    </Tooltip>\n                                    <Tooltip title=\"Excluir Estabelecimento\">\n                                        <Button className={'editIconButton'} onClick={() =>\n                                            handleDeleteIconClick(estabelecimento.nome, estabelecimento._id)} size=\"small\">\n                                            <DeleteIcon className='editIcon'></DeleteIcon>\n                                        </Button>\n                                    </Tooltip> \n                                </td> : ''}\n                        </tr>\n                    </Fragment>\n                )\n            })\n        }\n    }\n\n    return (\n        <>\n            <Container>\n                {loading ? <div className='allPage'><CircularProgress size={65}></CircularProgress></div> :\n                    <Fragment>\n                        <h1>{title}</h1>\n\n                        <Table responsive striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Nome do Estabelecimento</th>\n                                    <th>Endereço</th>\n                                    <th>Localização</th>\n                                    <th>Empresa</th>\n                                    {props.filtroLocalizacao || props.admin ? <th>Ações</th> : ''}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {mountEstabelecimentos()}\n                            </tbody>\n                        </Table>\n                    </Fragment>}\n            </Container>\n            <AlertDialog confirmDelete={deletarEstabelecimento}\n                giveUpDelete={() => setAlertDialogIsOpen(false)}\n                isOpen={alertDialogIsOpen} nomeEstabelecimento={nomeEstabelecimento} />\n        </>\n    )\n}\n\nexport default TabelaEstabelecimentos\n\nconst Container = styled(BootstrapContainer)`\npadding: 1.5rem;\n    h1{\n        margin-bottom: 2rem;\n    }\n    .last-column {\n        width: 10rem;\n    }\n`","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\estabelecimentosByEmpresa.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\CadastrarEstabelecimentos.jsx",["266","267","268","269","270","271","272","273","274"],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\CadastrarAdmins.jsx",["275"],"import { CircularProgress } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRegistrarAdmin, resetRegistrarAdminSlice } from '../../store/slicers/async/registrarAdmin';\nimport StyledDiv from '../css/admin/Login';\n\nconst CadastrarAdmins = () => {\n\n    const [mostrarAlert, setMostrarAlert] = useState(false)\n    const [alertSeverity, setAlertSeverity] = useState('error')\n    const [mensagensAlert, setMensagensAlert] = useState([])\n    const dispatch = useDispatch()\n    const registrarAdminState = useSelector((state) => state.auth.registrarAdmin)\n    const [form, setForm] = useState({\n        nome: '',\n        email: '',\n    })\n\n    useEffect(() => {\n        document.addEventListener('keypress', enviarFormPeloEnter)\n        return () => {\n            document.removeEventListener('keypress', enviarFormPeloEnter)\n            dispatch(resetRegistrarAdminSlice())\n        };\n\n        function enviarFormPeloEnter(e) {\n            if (e.key === 'Enter') {\n                let botaoLogin = document.querySelector('#botaoLogin')\n                botaoLogin.click()\n            }\n        }\n\n    }, [])\n\n    function formHandler(event) {\n        setForm({\n            ...form,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    useEffect(() => {\n        if (registrarAdminState.error) {\n            let erros = [];\n            registrarAdminState.error.map((error, index) => {\n                return erros.push(<li key={index} >{error.msg}</li>)\n            })\n            setMensagensAlert(erros)\n            setMostrarAlert(true)\n            setAlertSeverity('error')\n        }\n        return () => { };\n    }, [registrarAdminState])\n\n    const handleCadastro = async () => {\n        try {\n            const response = await dispatch(fetchRegistrarAdmin(form))\n            if(response.payload.email){\n                const arrResposta = []\n                const {email, senha} = response.payload\n                arrResposta.push(<li>Credenciais de acesso:</li>)\n                arrResposta.push(<li>Endereço de email: {email}</li>)\n                arrResposta.push(<li>Senha: {senha}</li>)\n                setMensagensAlert(arrResposta)\n                setMostrarAlert(true)\n                setAlertSeverity('success')\n            }\n            //const user = response.payload.user\n        } catch (error) {\n        }\n    }\n\n    function handleCloseAlert(){\n        setMostrarAlert(false)\n        setMensagensAlert([])\n    }\n\n    return (\n        <>\n            <StyledDiv>\n                <form className={'login'}>\n                    <h2 className={['login__title', \"centered-title\"].join(\" \")}>Crie um novo administrador</h2>\n                    {mostrarAlert ? <Alert closeText=\"Fechar\" onClose={() => handleCloseAlert()} className={`alertError`} severity={alertSeverity}>\n                        <ul>\n                            {mensagensAlert}\n                        </ul>\n                    </Alert> : ''}\n\n                    <label className={'login__label'} htmlFor='nome'>Primeiro Nome</label>\n                    <input onChange={formHandler} value={form.nome} className={'login__input'} id='nome' name='nome' type='text'></input>\n\n                    <label className={'login__label'} htmlFor='email'>Email</label>\n                    <input onChange={formHandler} value={form.email} className={'login__input'} id='email' name='email' type='email'></input>\n                    \n                    {registrarAdminState.loading ? <CircularProgress size={40}></CircularProgress> : ''}\n                    <button id={'botaoLogin'} type='button' onClick={() => handleCadastro()} className={'login__button'}>Enviar</button>\n                </form>\n            </StyledDiv>\n        </>\n    )\n}\n\nexport default CadastrarAdmins\n\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\admin\\CadastrarEmpresa.jsx",["276","277"],"import { CircularProgress } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport StyledDiv from '../css/admin/Login';\nimport { fetchCadastrarEmpresa, resetCadastrarEmpresaSlice } from '../../store/slicers/async/cadastrarEmpresa';\n\nconst CadastrarEmpresa = () => {\n\n    const [mostrarAlert, setMostrarAlert] = useState(false)\n    const [alertSeverity, setAlertSeverity] = useState('error')\n    const [mensagensAlert, setMensagensAlert] = useState([])\n    const dispatch = useDispatch()\n    const cadastrarEmpresaState = useSelector((state) => state.empresa.cadastrarEmpresa)\n    const [form, setForm] = useState({\n        nome: '',\n        tipo: '',\n    })\n    const [sendable, setSendable] = useState(true)\n\n    useEffect(() => {\n        document.addEventListener('keypress', enviarFormPeloEnter)\n        return () => {\n            document.removeEventListener('keypress', enviarFormPeloEnter)\n            dispatch(resetCadastrarEmpresaSlice())\n        };\n\n        function enviarFormPeloEnter(e) {\n            if (e.key === 'Enter') {\n                let botaoLogin = document.querySelector('#botaoLogin')\n                botaoLogin.click()\n            }\n        }\n\n    }, [])\n\n    function resetForm(){\n        setForm({\n            nome: '',\n            tipo: '',\n        })\n    }\n\n    function formHandler(event) {\n        setForm({\n            ...form,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    useEffect(() => {\n        if (cadastrarEmpresaState.error) {\n            let erros = [];\n            cadastrarEmpresaState.error.map((error, index) => {\n                return erros.push(<li key={index} >{error.msg}</li>)\n            })\n            setMensagensAlert(erros)\n            setMostrarAlert(true)\n            setAlertSeverity('error')\n        }\n        return () => { };\n    }, [cadastrarEmpresaState])\n\n    const handleCadastro = async () => {\n        try {\n            setSendable(false)\n            const response = await dispatch(fetchCadastrarEmpresa(form))\n            if(response.payload.nome){\n                const arrResposta = []\n                arrResposta.push(<li>Empresa cadastrada com sucesso!</li>)\n                setMensagensAlert(arrResposta)\n                setMostrarAlert(true)\n                setAlertSeverity('success')\n                resetForm()\n                setSendable(true)\n            }\n            //const user = response.payload.user\n        } catch (error) {\n            setSendable(true)\n            resetForm()\n        }\n    }\n\n    function handleCloseAlert(){\n        setMostrarAlert(false)\n        setMensagensAlert([])\n    }\n\n    return (\n        <>\n            <StyledDiv>\n                <form className={'login'}>\n                    <h2 className={['login__title', \"centered-title\"].join(\" \")}>Cadastrar Empresa</h2>\n                    {mostrarAlert ? <Alert closeText=\"Fechar\" onClose={() => handleCloseAlert()} className={`alertError`} severity={alertSeverity}>\n                        <ul>\n                            {mensagensAlert}\n                        </ul>\n                    </Alert> : ''}\n\n                    <label className={'login__label'} htmlFor='nome'>Nome</label>\n                    <input onChange={formHandler} value={form.nome} className={'login__input'} id='nome' name='nome' type='text'></input>\n\n                    <label className={'login__label'} htmlFor='tipo'>Tipo</label>\n                    <input onChange={formHandler} value={form.tipo} className={'login__input'} id='tipo' name='tipo' type='text'></input>\n                    \n                    {cadastrarEmpresaState.loading ? <CircularProgress size={40}></CircularProgress> : ''}\n                    <button id={'botaoLogin'} type='button' onClick={() => handleCadastro()} className={'login__button'}>Enviar</button>\n                </form>\n            </StyledDiv>\n        </>\n    )\n}\n\nexport default CadastrarEmpresa\n\n","C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\getEmpresasWithEstabelecimento.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\localizacoesByEmpresa.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\localizacoes.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\estabelecimentosByLoggedUser.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\estabelecimentosByLocalizacao.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\deleteEstabelecimento.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\components\\AlertDialog.jsx",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\store\\slicers\\async\\getOneEstabelecimentoByLoggedUser.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\views\\css\\admin\\CadastrarEstabelecimentos.js",[],"C:\\Users\\lubal\\Documents\\lucas\\dev\\javascript\\gerenciador de estabelecimentos\\gerenciador-estabelecimentos-fb\\src\\app\\services\\requests\\localizacao.js",[],{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":3,"column":33,"nodeType":"284","messageId":"285","endLine":3,"endColumn":41},{"ruleId":"282","severity":1,"message":"286","line":8,"column":10,"nodeType":"284","messageId":"285","endLine":8,"endColumn":18},{"ruleId":"282","severity":1,"message":"287","line":9,"column":10,"nodeType":"284","messageId":"285","endLine":9,"endColumn":25},{"ruleId":"282","severity":1,"message":"288","line":9,"column":27,"nodeType":"284","messageId":"285","endLine":9,"endColumn":34},{"ruleId":"282","severity":1,"message":"289","line":10,"column":8,"nodeType":"284","messageId":"285","endLine":10,"endColumn":20},{"ruleId":"282","severity":1,"message":"290","line":1,"column":17,"nodeType":"284","messageId":"285","endLine":1,"endColumn":27},{"ruleId":"282","severity":1,"message":"286","line":1,"column":39,"nodeType":"284","messageId":"285","endLine":1,"endColumn":47},{"ruleId":"282","severity":1,"message":"291","line":2,"column":37,"nodeType":"284","messageId":"285","endLine":2,"endColumn":48},{"ruleId":"282","severity":1,"message":"289","line":6,"column":8,"nodeType":"284","messageId":"285","endLine":6,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":20,"column":8,"nodeType":"294","endLine":20,"endColumn":10,"suggestions":"295"},{"ruleId":"282","severity":1,"message":"290","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":38,"column":8,"nodeType":"294","endLine":38,"endColumn":10,"suggestions":"296"},{"ruleId":"282","severity":1,"message":"288","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":17},{"ruleId":"282","severity":1,"message":"290","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":20},{"ruleId":"282","severity":1,"message":"297","line":6,"column":10,"nodeType":"284","messageId":"285","endLine":6,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":40,"column":8,"nodeType":"294","endLine":40,"endColumn":10,"suggestions":"298"},{"ruleId":"282","severity":1,"message":"299","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":15},{"ruleId":"282","severity":1,"message":"287","line":6,"column":10,"nodeType":"284","messageId":"285","endLine":6,"endColumn":25},{"ruleId":"282","severity":1,"message":"300","line":8,"column":8,"nodeType":"284","messageId":"285","endLine":8,"endColumn":13},{"ruleId":"282","severity":1,"message":"301","line":10,"column":8,"nodeType":"284","messageId":"285","endLine":10,"endColumn":27},{"ruleId":"282","severity":1,"message":"302","line":11,"column":8,"nodeType":"284","messageId":"285","endLine":11,"endColumn":12},{"ruleId":"282","severity":1,"message":"303","line":13,"column":8,"nodeType":"284","messageId":"285","endLine":13,"endColumn":17},{"ruleId":"282","severity":1,"message":"304","line":18,"column":9,"nodeType":"284","messageId":"285","endLine":18,"endColumn":18},{"ruleId":"282","severity":1,"message":"290","line":1,"column":27,"nodeType":"284","messageId":"285","endLine":1,"endColumn":37},{"ruleId":"282","severity":1,"message":"305","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":21},{"ruleId":"282","severity":1,"message":"306","line":44,"column":10,"nodeType":"284","messageId":"285","endLine":44,"endColumn":33},{"ruleId":"282","severity":1,"message":"290","line":1,"column":27,"nodeType":"284","messageId":"285","endLine":1,"endColumn":37},{"ruleId":"282","severity":1,"message":"305","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":21},{"ruleId":"282","severity":1,"message":"307","line":4,"column":10,"nodeType":"284","messageId":"285","endLine":4,"endColumn":21},{"ruleId":"282","severity":1,"message":"308","line":5,"column":10,"nodeType":"284","messageId":"285","endLine":5,"endColumn":21},{"ruleId":"282","severity":1,"message":"309","line":15,"column":12,"nodeType":"284","messageId":"285","endLine":15,"endColumn":24},{"ruleId":"292","severity":1,"message":"310","line":37,"column":8,"nodeType":"294","endLine":37,"endColumn":10,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":46,"column":33,"nodeType":"314","endLine":46,"endColumn":49},{"ruleId":"292","severity":1,"message":"315","line":26,"column":8,"nodeType":"294","endLine":26,"endColumn":10,"suggestions":"316"},{"ruleId":"312","severity":1,"message":"313","line":42,"column":33,"nodeType":"314","endLine":42,"endColumn":49},{"ruleId":"282","severity":1,"message":"317","line":4,"column":23,"nodeType":"284","messageId":"285","endLine":4,"endColumn":34},{"ruleId":"292","severity":1,"message":"315","line":40,"column":8,"nodeType":"294","endLine":40,"endColumn":10,"suggestions":"318"},{"ruleId":"282","severity":1,"message":"319","line":2,"column":5,"nodeType":"284","messageId":"285","endLine":2,"endColumn":49},{"ruleId":"292","severity":1,"message":"310","line":41,"column":8,"nodeType":"294","endLine":41,"endColumn":10,"suggestions":"320"},{"ruleId":"292","severity":1,"message":"321","line":80,"column":8,"nodeType":"294","endLine":80,"endColumn":24,"suggestions":"322"},{"ruleId":"292","severity":1,"message":"323","line":92,"column":8,"nodeType":"294","endLine":92,"endColumn":26,"suggestions":"324"},{"ruleId":"312","severity":1,"message":"313","line":120,"column":33,"nodeType":"314","endLine":120,"endColumn":49},{"ruleId":"282","severity":1,"message":"325","line":34,"column":9,"nodeType":"284","messageId":"285","endLine":34,"endColumn":33},{"ruleId":"282","severity":1,"message":"326","line":46,"column":17,"nodeType":"284","messageId":"285","endLine":46,"endColumn":20},{"ruleId":"292","severity":1,"message":"327","line":61,"column":6,"nodeType":"294","endLine":61,"endColumn":8,"suggestions":"328"},{"ruleId":"292","severity":1,"message":"329","line":68,"column":6,"nodeType":"294","endLine":68,"endColumn":8,"suggestions":"330"},{"ruleId":"292","severity":1,"message":"331","line":93,"column":6,"nodeType":"294","endLine":93,"endColumn":8,"suggestions":"332"},{"ruleId":"282","severity":1,"message":"333","line":154,"column":12,"nodeType":"284","messageId":"285","endLine":154,"endColumn":25},{"ruleId":"292","severity":1,"message":"329","line":178,"column":6,"nodeType":"294","endLine":178,"endColumn":32,"suggestions":"334"},{"ruleId":"292","severity":1,"message":"329","line":193,"column":6,"nodeType":"294","endLine":193,"endColumn":31,"suggestions":"335"},{"ruleId":"336","severity":1,"message":"337","line":240,"column":39,"nodeType":"338","messageId":"339","endLine":240,"endColumn":41},{"ruleId":"292","severity":1,"message":"293","line":34,"column":8,"nodeType":"294","endLine":34,"endColumn":10,"suggestions":"340"},{"ruleId":"282","severity":1,"message":"341","line":19,"column":12,"nodeType":"284","messageId":"285","endLine":19,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":35,"column":8,"nodeType":"294","endLine":35,"endColumn":10,"suggestions":"342"},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'isAuthenticated' is defined but never used.","'getUser' is defined but never used.","'LoginContext' is defined but never used.","'useContext' is defined but never used.","'NavDropdown' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["345"],["346"],"'fetchLogar' is defined but never used.",["347"],"'history' is defined but never used.","'Login' is defined but never used.","'BuscaPorLocalizacao' is defined but never used.","'user' is defined but never used.","'Cadastrar' is defined but never used.","'userState' is assigned a value but never used.","'useDispatch' is defined but never used.","'goToBuscaPorLocalizacao' is defined but never used.","'logoutStore' is defined but never used.","'removeToken' is defined but never used.","'isListaVazia' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'alert', 'dispatch', and 'selectEmpresaState.empresaId'. Either include them or remove the dependency array.",["348"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'alert' and 'dispatch'. Either include them or remove the dependency array.",["349"],"'useSelector' is defined but never used.",["350"],"'fetchEstabelecimentosByLocalizacaoAndEmpresa' is defined but never used.",["351"],"React Hook useEffect has missing dependencies: 'alert', 'dispatch', 'localizacaoIdFiltro', 'props.filtroEmpresa', 'props.filtroLocalizacao', 'props.navbar', and 'selectEmpresaState.empresaId'. Either include them or remove the dependency array.",["352"],"React Hook useEffect has missing dependencies: 'props.filtroEmpresa', 'props.filtroLocalizacao', and 'selectEmpresaState.nomeEmpresa'. Either include them or remove the dependency array.",["353"],"'empresaByLoggedUserState' is assigned a value but never used.","'_id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'estabelecimentoASerEditado', and 'novoCadastro'. Either include them or remove the dependency array.",["354"],"React Hook useEffect has a missing dependency: 'novoCadastro'. Either include it or remove the dependency array.",["355"],"React Hook useEffect has missing dependencies: 'alert', 'dispatch', and 'props.navbar'. Either include them or remove the dependency array.",["356"],"'displayErrors' is defined but never used.",["357"],["358"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["359"],"'sendable' is assigned a value but never used.",["360"],"no-global-assign","no-unsafe-negation",{"desc":"361","fix":"362"},{"desc":"361","fix":"363"},{"desc":"361","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"367","fix":"369"},{"desc":"365","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"361","fix":"385"},{"desc":"361","fix":"386"},"Update the dependencies array to be: [dispatch]",{"range":"387","text":"388"},{"range":"389","text":"388"},{"range":"390","text":"388"},"Update the dependencies array to be: [alert, dispatch, selectEmpresaState.empresaId]",{"range":"391","text":"392"},"Update the dependencies array to be: [alert, dispatch]",{"range":"393","text":"394"},{"range":"395","text":"394"},{"range":"396","text":"392"},"Update the dependencies array to be: [alert, dispatch, localizacaoIdFiltro, props.filtroEmpresa, props.filtroLocalizacao, props.navbar, responseDelete, selectEmpresaState.empresaId]",{"range":"397","text":"398"},"Update the dependencies array to be: [estabelecimentos, props.filtroEmpresa, props.filtroLocalizacao, selectEmpresaState.nomeEmpresa]",{"range":"399","text":"400"},"Update the dependencies array to be: [dispatch, estabelecimentoASerEditado, novoCadastro]",{"range":"401","text":"402"},"Update the dependencies array to be: [novoCadastro]",{"range":"403","text":"404"},"Update the dependencies array to be: [alert, dispatch, props.navbar]",{"range":"405","text":"406"},"Update the dependencies array to be: [novoCadastro, postEstabelecimentoState]",{"range":"407","text":"408"},"Update the dependencies array to be: [novoCadastro, putEstabelecimentoState]",{"range":"409","text":"410"},{"range":"411","text":"388"},{"range":"412","text":"388"},[798,800],"[dispatch]",[1392,1394],[1500,1502],[1637,1639],"[alert, dispatch, selectEmpresaState.empresaId]",[1120,1122],"[alert, dispatch]",[1607,1609],[1890,1892],[3859,3875],"[alert, dispatch, localizacaoIdFiltro, props.filtroEmpresa, props.filtroLocalizacao, props.navbar, responseDelete, selectEmpresaState.empresaId]",[4345,4363],"[estabelecimentos, props.filtroEmpresa, props.filtroLocalizacao, selectEmpresaState.nomeEmpresa]",[2815,2817],"[dispatch, estabelecimentoASerEditado, novoCadastro]",[2929,2931],"[novoCadastro]",[3644,3646],"[alert, dispatch, props.navbar]",[5546,5572],"[novoCadastro, postEstabelecimentoState]",[5913,5938],"[novoCadastro, putEstabelecimentoState]",[1237,1239],[1303,1305]]